/**
 * OpenApi specification - My Spring App
 * OpenApi document for Spring Security
 *
 * OpenAPI spec version: 1.0
 * Contact: viet.hung.2898@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GrantedAuthority } from '../models/GrantedAuthority';
import { RefreshToken } from '../models/RefreshToken';
import { Role } from '../models/Role';
import { TimeSheet } from '../models/TimeSheet';
import { WorkTime } from '../models/WorkTime';
import { HttpFile } from '../http/http';

export class User {
    'id'?: number;
    'name'?: string;
    'username'?: string;
    'email'?: string;
    'password'?: string;
    'timeSheets'?: Set<TimeSheet>;
    'roles'?: Set<Role>;
    'refreshTokens'?: Set<RefreshToken>;
    'workTime'?: WorkTime;
    'authorities'?: Array<GrantedAuthority>;
    'enabled'?: boolean;
    'credentialsNonExpired'?: boolean;
    'accountNonExpired'?: boolean;
    'accountNonLocked'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "timeSheets",
            "baseName": "timeSheets",
            "type": "Set<TimeSheet>",
            "format": ""
        },
        {
            "name": "roles",
            "baseName": "roles",
            "type": "Set<Role>",
            "format": ""
        },
        {
            "name": "refreshTokens",
            "baseName": "refreshTokens",
            "type": "Set<RefreshToken>",
            "format": ""
        },
        {
            "name": "workTime",
            "baseName": "workTime",
            "type": "WorkTime",
            "format": ""
        },
        {
            "name": "authorities",
            "baseName": "authorities",
            "type": "Array<GrantedAuthority>",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "credentialsNonExpired",
            "baseName": "credentialsNonExpired",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "accountNonExpired",
            "baseName": "accountNonExpired",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "accountNonLocked",
            "baseName": "accountNonLocked",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return User.attributeTypeMap;
    }

    public constructor() {
    }
}
